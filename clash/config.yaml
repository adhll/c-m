# 系统参数
port: 7890                        # HTTP代理端口
socks-port: 7891                  # SOCKS代理端口
redir-port: 7892                  # 透明代理端口（for Linux or MacOS）不能更改
mixed-port: 7893                  # 集成端口，http与socks
#authentication:                   # 验证
#  - "admin:admin"                 # http与socks的账号跟密码，推荐使用
allow-lan: true                   # 允许局域网连接
mode: Script                      # Rule or Script    # 工作模式（有Global全局，Rule规则，Direct直连,Script脚本）
log-level: info                   # 日志级别（info / warning / error / debug / silent）
ipv6: false                       # 假
external-controller: 0.0.0.0:9090 # 外部控制面板监听端口
external-ui: dashboard            # 外部控制面板仪表板
secret: "admin"                   # dashboard面板的密码，同时也是tracing的密码
interface-name: enp2s0            # ip a 查看接口名称，确认一致 
profile:                          # 描述
  store-selected: true            # 策略组选择缓存开关，打开后可以保存策略组选择，重启不会回复默认
  tracing: true                   # tracing开关，必须打开才能对接tracing

# 实验性功能
experimental:
  ignore-resolve-fail: true

# TUN设置
tun:
  enable: true         
  stack: gvisor
  dns-hijack:
    - tcp://8.8.8.8:53
    - tcp://8.8.4.4:53
    - 8.8.8.8:53
    - 8.8.8.8:53

# DNS设置  
dns:
  enable: true
  ipv6: false
  listen: 0.0.0.0:5352         # DNS监听端口！！！clash下，此处不能改，切记！！！！
  # DNS解析模式（redir-host # or fake-ip），这里重点解释一下：
  # redir-host为真实IP模式，需要设置nameserver（国内）和fallback（国外）两组DNS，当设备发起DNS请求，CLASH会同时向两组里面所有服务器发起请求，然后首先拿nameserver中最快返回的结果去匹配规则，使用GEOIP判断此IP的所属区域，如果属于国内（CN）或保留地址则直接响应给客户端，其他情况则把fallback中的结果响应给客户端
  # fake-ip则相反，当clash收到请求，会直接返回一个198.18.0.1/16的假IP给设备，同时 Clash 继续解析域名规则和 IP 规则，而且如果 Clash DNS 匹配到了域名规则、则不需要向上游 DNS 请求，Clash 已经可以直接将连接发给代理服务器，节省了 Clash DNS 向上游 DNS 请求解析
  default-nameserver:
    - 223.5.5.5
    - 119.29.29.29
    - 114.114.114.114
  enhanced-mode: fake-ip         # 理论上来说，fake-ip具有更好的响应速度跟抗污染能力（主要还得看规则）。由于灯塔提前分流了国内外流量，国内流量不经过clash，所以选择fake-ip可以得到更好的效果，当然，还是得看规则完不完整。有需要返回真实IP的可以选择redir-host，老实说两种DNS模式在实际体验中差别不大
  fake-ip-range: 198.18.0.1/16   # ip范围
  use-hosts: true                # 开启
  fake-ip-filter:                # fake-ip白名单，对于有需要返回真实IP又想用fake-ip的，可参照以下格式把域名加进去
    - msftconnecttest.com
    - "*.msftconnecttest.com"
    - msftncsi.com
    - "*.msftncsi.com"
    - '.lan'
    - localhost.ptlogin2.qq.com    
    - '.srv.nintendo.net'   
    - '.stun.playstation.net'   
    - 'xbox.*.microsoft.com'    
    - '.xboxlive.com'
  nameserver:                    # DNS服务器（国内），此处建议只填一个速度最快的DNS就可以了                                   # DNS服务器（国内），此处建议只填一个速度最快的DNS就可以了
    - 119.29.29.29
    - 119.28.28.28
    - 223.5.5.5
    - 223.6.6.6
    - 180.76.76.76
    - 1.2.4.8

proxy-providers:
  🇭🇰 香港-IEPL:
    type: http
    path: "./proxy_provider/IEPL-HK.yaml"
    url: https://dler.cloud/subscribe/token?protocols=trojan&list=clash&area=hk&match=IEPL|Lite|Premium
    interval: 28800
    health-check:
      enable: true
      url: http://www.gstatic.com/generate_204
      interval: 600
  🇭🇰 香港-AC:
    type: http
    path: "./proxy_provider/AC-HK.yaml"
    url: https://dler.cloud/subscribe/token?protocols=trojan&list=clash&area=hk&match=AC&hijack=true
    interval: 28800
    health-check:
      enable: true
      url: http://cp.cloudflare.com/generate_204
      interval: 300
  🇨🇳 台湾-TW:
    type: http
    path: "./proxy_provider/TW.yaml"
    url: https://dler.cloud/subscribe/token?protocols=trojan&list=clash&area=tw
    interval: 28800
    health-check:
      enable: true
      url: http://www.gstatic.com/generate_204
      interval: 600       
  🇸🇬 新加坡-SG:
    type: http
    path: "./proxy_provider/SG.yaml"
    url: https://dler.cloud/subscribe/token?protocols=trojan&list=clash&area=sg
    interval: 28800
    health-check:
      enable: true
      url: http://cp.cloudflare.com/generate_204
      interval: 300      
  🇯🇵 日本-JP:
    type: http
    path: "./proxy_provider/JP.yaml"
    url: https://dler.cloud/subscribe/token?protocols=trojan&list=clash&area=jp
    interval: 28800
    health-check:
      enable: true
      url: http://cp.cloudflare.com/generate_204
      interval: 300
  🇺🇸 美国-US:
    type: http
    path: "./proxy_provider/US.yaml"
    url: https://dler.cloud/subscribe/token?protocols=trojan&list=clash&area=us
    interval: 28800
    health-check:
      enable: true
      url: http://cp.cloudflare.com/generate_204
      interval: 300
  port: 158
  name: "\U0001F1ED\U0001F1F0 香港 Lite [02]"
  type: trojan
  password: 09fe965000.wns.windows.com
  udp: true
  cipher: rc4-md5
  alpn:
  - h2
  - http/1.1
  skip-cert-verify: true
proxy-groups:
- name: Proxy
  type: select
  proxies:
  - Auto - UrlTest
  - DIRECT
  - 🇭🇰 香港-IEPL
  - 🇭🇰 香港-AC
  - 🇨🇳 台湾-TW    
  - 🇸🇬 新加坡-SG
  - 🇯🇵 日本-JP
  - 🇺🇸 美国-US
  - 🚀 Select
- name: Domestic
  type: select
  proxies:
  - DIRECT
  - Proxy
  - 🇭🇰 香港-IEPL
  - 🇭🇰 香港-AC
  - 🇨🇳 台湾-TW    
  - 🇸🇬 新加坡-SG
  - 🇯🇵 日本-JP
  - 🇺🇸 美国-US
  - 🚀 Select
- name: Others
  type: select
  proxies:
  - Proxy
  - DIRECT
  - 🇭🇰 香港-IEPL
  - 🇭🇰 香港-AC
  - 🇨🇳 台湾-TW    
  - 🇸🇬 新加坡-SG
  - 🇯🇵 日本-JP
  - 🇺🇸 美国-US
  - 🚀 Select
- name: AdBlock
  type: select
  proxies:
  - REJECT
  - DIRECT
  - Proxy
- name: Apple
  type: select
  proxies:
  - DIRECT
  - Proxy
  - 🇭🇰 香港-IEPL
  - 🇭🇰 香港-AC
  - 🇨🇳 台湾-TW    
  - 🇸🇬 新加坡-SG
  - 🇯🇵 日本-JP
  - 🇺🇸 美国-US
  - 🚀 Select
- name: Google FCM
  type: select
  proxies:
  - DIRECT
  - Proxy
  - 🇭🇰 香港-IEPL
  - 🇭🇰 香港-AC
  - 🇨🇳 台湾-TW    
  - 🇸🇬 新加坡-SG
  - 🇯🇵 日本-JP
  - 🇺🇸 美国-US
  - 🚀 Select
- name: Scholar
  type: select
  proxies:
  - DIRECT
  - Proxy
  - 🇭🇰 香港-IEPL
  - 🇭🇰 香港-AC
  - 🇨🇳 台湾-TW    
  - 🇸🇬 新加坡-SG
  - 🇯🇵 日本-JP
  - 🇺🇸 美国-US
  - 🚀 Select
- name: Asian TV
  type: select
  proxies:
  - DIRECT
  - Proxy
  - 🇭🇰 香港-IEPL
  - 🇭🇰 香港-AC
  - 🇨🇳 台湾-TW    
  - 🇸🇬 新加坡-SG
  - 🇯🇵 日本-JP
  - 🇺🇸 美国-US
  - 🚀 Select
- name: Global TV
  type: select
  proxies:
  - Proxy
  - DIRECT
  - 🇭🇰 香港-IEPL
  - 🇭🇰 香港-AC
  - 🇨🇳 台湾-TW    
  - 🇸🇬 新加坡-SG
  - 🇯🇵 日本-JP
  - 🇺🇸 美国-US
  - 🚀 Select
- name: Netflix
  type: select
  proxies:
  - Proxy
  - DIRECT
  - 🇭🇰 香港-IEPL
  - 🇭🇰 香港-AC
  - 🇨🇳 台湾-TW    
  - 🇸🇬 新加坡-SG
  - 🇯🇵 日本-JP
  - 🇺🇸 美国-US
  - 🚀 Select
- name: Disney
  type: select
  proxies:
  - Proxy
  - DIRECT
  - 🇭🇰 香港-IEPL
  - 🇭🇰 香港-AC
  - 🇨🇳 台湾-TW    
  - 🇸🇬 新加坡-SG
  - 🇯🇵 日本-JP
  - 🇺🇸 美国-US
  - 🚀 Select
- name: Spotify
  type: select
  proxies:
  - Proxy
  - DIRECT
  - 🇭🇰 香港-IEPL
  - 🇭🇰 香港-AC
  - 🇨🇳 台湾-TW    
  - 🇸🇬 新加坡-SG
  - 🇯🇵 日本-JP
  - 🇺🇸 美国-US
  - 🚀 Select
- name: YouTube
  type: select
  proxies:
  - Proxy
  - DIRECT
  - 🇭🇰 香港-IEPL
  - 🇭🇰 香港-AC
  - 🇨🇳 台湾-TW    
  - 🇸🇬 新加坡-SG
  - 🇯🇵 日本-JP
  - 🇺🇸 美国-US
  - 🚀 Select
- name: Telegram
  type: select
  proxies:
  - Proxy
  - DIRECT
  - 🇭🇰 香港-IEPL
  - 🇭🇰 香港-AC
  - 🇨🇳 台湾-TW    
  - 🇸🇬 新加坡-SG
  - 🇯🇵 日本-JP
  - 🇺🇸 美国-US
  - 🚀 Select
- name: Crypto
  type: select
  proxies:
  - Proxy
  - DIRECT
- name: Douyin
  type: select
  proxies:
  - DIRECT
  - Proxy
- name: Steam
  type: select
  proxies:
  - Proxy
  - DIRECT
  - 🇭🇰 香港-IEPL
  - 🇭🇰 香港-AC
  - 🇨🇳 台湾-TW    
  - 🇸🇬 新加坡-SG
  - 🇯🇵 日本-JP
  - 🇺🇸 美国-US
  - 🚀 Select
- name: Speedtest
  type: select
  proxies:
  - Proxy
  - DIRECT
  - 🇭🇰 香港-IEPL
  - 🇭🇰 香港-AC
  - 🇨🇳 台湾-TW    
  - 🇸🇬 新加坡-SG
  - 🇯🇵 日本-JP
  - 🇺🇸 美国-US
  - 🚀 Select
- name: PayPal
  type: select
  proxies:
  - DIRECT
  - Proxy
  - 🇭🇰 香港-IEPL
  - 🇭🇰 香港-AC
  - 🇨🇳 台湾-TW    
  - 🇸🇬 新加坡-SG
  - 🇯🇵 日本-JP
  - 🇺🇸 美国-US
  - 🚀 Select
- name: Microsoft
  type: select
  proxies:
  - DIRECT
  - Proxy
  - 🇭🇰 香港-IEPL
  - 🇭🇰 香港-AC
  - 🇨🇳 台湾-TW    
  - 🇸🇬 新加坡-SG
  - 🇯🇵 日本-JP
  - 🇺🇸 美国-US
  - 🚀 Select
- name: Auto - UrlTest
  type: url-test
  proxies:
  - 🇭🇰 香港-IEPL
  - 🇭🇰 香港-AC
  - 🇨🇳 台湾-TW    
  - 🇸🇬 新加坡-SG
  - 🇯🇵 日本-JP
  - 🇺🇸 美国-US
  - 🚀 Select
  url: http://www.gstatic.com/generate_204
  interval: "3600"
rules:
- RULE-SET,Reject,AdBlock
- RULE-SET,Special,DIRECT
- RULE-SET,Netflix,Netflix
- RULE-SET,Spotify,Spotify
- RULE-SET,YouTube,YouTube
- RULE-SET,Disney Plus,Disney
- RULE-SET,Bilibili,Asian TV
- RULE-SET,IQ,Asian TV
- RULE-SET,IQIYI,Asian TV
- RULE-SET,Letv,Asian TV
- RULE-SET,Netease Music,Asian TV
- RULE-SET,Tencent Video,Asian TV
- RULE-SET,Youku,Asian TV
- RULE-SET,WeTV,Asian TV
- RULE-SET,ABC,Global TV
- RULE-SET,Abema TV,Global TV
- RULE-SET,Amazon,Global TV
- RULE-SET,Apple News,Global TV
- RULE-SET,Apple TV,Global TV
- RULE-SET,Bahamut,Global TV
- RULE-SET,BBC iPlayer,Global TV
- RULE-SET,DAZN,Global TV
- RULE-SET,Discovery Plus,Global TV
- RULE-SET,encoreTVB,Global TV
- RULE-SET,F1 TV,Global TV
- RULE-SET,Fox Now,Global TV
- RULE-SET,Fox+,Global TV
- RULE-SET,HBO Go,Global TV
- RULE-SET,HBO Max,Global TV
- RULE-SET,Hulu Japan,Global TV
- RULE-SET,Hulu,Global TV
- RULE-SET,Japonx,Global TV
- RULE-SET,JOOX,Global TV
- RULE-SET,KKBOX,Global TV
- RULE-SET,KKTV,Global TV
- RULE-SET,Line TV,Global TV
- RULE-SET,myTV SUPER,Global TV
- RULE-SET,Pandora,Global TV
- RULE-SET,PBS,Global TV
- RULE-SET,Pornhub,Global TV
- RULE-SET,Soundcloud,Global TV
- RULE-SET,ViuTV,Global TV
- RULE-SET,Telegram,Telegram
- RULE-SET,Crypto,Crypto
- RULE-SET,Douyin,Douyin
- RULE-SET,Steam,Steam
- RULE-SET,Speedtest,Speedtest
- RULE-SET,PayPal,PayPal
- RULE-SET,Microsoft,Microsoft
- RULE-SET,Apple,Apple
- RULE-SET,Google FCM,Google FCM
- RULE-SET,Scholar,Scholar
- RULE-SET,PROXY,Proxy
- RULE-SET,Domestic,Domestic
- RULE-SET,Domestic IPs,Domestic
- RULE-SET,LAN,DIRECT
- GEOIP,CN,Domestic
- MATCH,Others
script:
  code: |
    def main(ctx, metadata):
        ruleset_action = {"Reject": "AdBlock",
            "Special": "DIRECT",
            "Netflix": "Netflix",
            "Spotify": "Spotify",
            "YouTube": "YouTube",
            "Disney Plus": "Disney",
            "Bilibili": "Asian TV",
            "IQ": "Asian TV",
            "IQIYI": "Asian TV",
            "Letv": "Asian TV",
            "Netease Music": "Asian TV",
            "Tencent Video": "Asian TV",
            "Youku": "Asian TV",
            "WeTV": "Asian TV",
            "ABC": "Global TV",
            "Abema TV": "Global TV",
            "Amazon": "Global TV",
            "Apple News": "Global TV",
            "Apple TV": "Global TV",
            "Bahamut": "Global TV",
            "BBC iPlayer": "Global TV",
            "DAZN": "Global TV",
            "Discovery Plus": "Global TV",
            "encoreTVB": "Global TV",
            "F1 TV": "Global TV",
            "Fox Now": "Global TV",
            "Fox+": "Global TV",
            "HBO Go": "Global TV",
            "HBO Max": "Global TV",
            "Hulu Japan": "Global TV",
            "Hulu": "Global TV",
            "Japonx": "Global TV",
            "JOOX": "Global TV",
            "KKBOX": "Global TV",
            "KKTV": "Global TV",
            "Line TV": "Global TV",
            "myTV SUPER": "Global TV",
            "Pandora": "Global TV",
            "PBS": "Global TV",
            "Pornhub": "Global TV",
            "Soundcloud": "Global TV",
            "ViuTV": "Global TV",
            "Telegram": "Telegram",
            "Crypto": "Crypto",
            "Douyin": "Douyin",
            "Steam": "Steam",
            "Speedtest": "Speedtest",
            "PayPal": "PayPal",
            "Microsoft": "Microsoft",
            "Apple": "Apple",
            "Google FCM": "Google FCM",
            "Scholar": "Scholar",
            "PROXY": "Proxy",
            "Domestic": "Domestic",
            "Domestic IPs": "Domestic",
            "LAN": "DIRECT"
          }

        port = int(metadata["dst_port"])

        if metadata["network"] == "UDP":
            if port == 443:
                ctx.log('[Script] matched QUIC traffic use reject')
                return "REJECT"

        port_list = [21, 22, 23, 53, 80, 123, 143, 194, 443, 465, 587, 853, 993, 995, 998, 2052, 2053, 2082, 2083, 2086, 2095, 2096, 5222, 5228, 5229, 5230, 8080, 8443, 8880, 8888, 8889]
        if port not in port_list:
            ctx.log('[Script] not common port use direct')
            return "DIRECT"

        if metadata["dst_ip"] == "":
            metadata["dst_ip"] = ctx.resolve_ip(metadata["host"])

        for ruleset in ruleset_action:
            if ctx.rule_providers[ruleset].match(metadata):
                return ruleset_action[ruleset]

        if metadata["dst_ip"] == "":
            return "DIRECT"

        code = ctx.geoip(metadata["dst_ip"])
        if code == "CN":
            ctx.log('[Script] Geoip CN')
            return "Domestic"

        ctx.log('[Script] FINAL')
        return "Others"
rule-providers:
  Reject:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Reject.yaml
    path: ./Rules/Reject
    interval: 86400
  Special:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Special.yaml
    path: ./Rules/Special
    interval: 86400
  Netflix:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Media/Netflix.yaml
    path: ./Rules/Media/Netflix
    interval: 86400
  Spotify:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Media/Spotify.yaml
    path: ./Rules/Media/Spotify
    interval: 86400
  YouTube:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Media/YouTube.yaml
    path: ./Rules/Media/YouTube
    interval: 86400
  Bilibili:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Media/Bilibili.yaml
    path: ./Rules/Media/Bilibili
    interval: 86400
  IQ:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Media/IQ.yaml
    path: ./Rules/Media/IQI
    interval: 86400
  IQIYI:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Media/IQIYI.yaml
    path: ./Rules/Media/IQYI
    interval: 86400
  Letv:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Media/Letv.yaml
    path: ./Rules/Media/Letv
    interval: 86400
  Netease Music:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Media/Netease%20Music.yaml
    path: ./Rules/Media/Netease_Music
    interval: 86400
  Tencent Video:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Media/Tencent%20Video.yaml
    path: ./Rules/Media/Tencent_Video
    interval: 86400
  Youku:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Media/Youku.yaml
    path: ./Rules/Media/Youku
    interval: 86400
  WeTV:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Media/WeTV.yaml
    path: ./Rules/Media/WeTV
    interval: 86400
  ABC:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Media/ABC.yaml
    path: ./Rules/Media/ABC
    interval: 86400
  Abema TV:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Media/Abema%20TV.yaml
    path: ./Rules/Media/Abema_TV
    interval: 86400
  Amazon:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Media/Amazon.yaml
    path: ./Rules/Media/Amazon
    interval: 86400
  Apple News:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Media/Apple%20News.yaml
    path: ./Rules/Media/Apple_News
    interval: 86400
  Apple TV:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Media/Apple%20TV.yaml
    path: ./Rules/Media/Apple_TV
    interval: 86400
  Bahamut:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Media/Bahamut.yaml
    path: ./Rules/Media/Bahamut
    interval: 86400
  BBC iPlayer:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Media/BBC%20iPlayer.yaml
    path: ./Rules/Media/BBC_iPlayer
    interval: 86400
  DAZN:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Media/DAZN.yaml
    path: ./Rules/Media/DAZN
    interval: 86400
  Discovery Plus:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Media/Discovery%20Plus.yaml
    path: ./Rules/Media/Discovery_Plus
    interval: 86400
  Disney Plus:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Media/Disney%20Plus.yaml
    path: ./Rules/Media/Disney_Plus
    interval: 86400
  encoreTVB:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Media/encoreTVB.yaml
    path: ./Rules/Media/encoreTVB
    interval: 86400
  F1 TV:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Media/F1%20TV.yaml
    path: ./Rules/Media/F1_TV
    interval: 86400
  Fox Now:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Media/Fox%20Now.yaml
    path: ./Rules/Media/Fox_Now
    interval: 86400
  Fox+:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Media/Fox%2B.yaml
    path: ./Rules/Media/Fox+
    interval: 86400
  HBO Go:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Media/HBO%20Go.yaml
    path: ./Rules/Media/HBO_Go
    interval: 86400
  HBO Max:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Media/HBO%20Max.yaml
    path: ./Rules/Media/HBO_Max
    interval: 86400
  Hulu Japan:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Media/Hulu%20Japan.yaml
    path: ./Rules/Media/Hulu_Japan
    interval: 86400
  Hulu:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Media/Hulu.yaml
    path: ./Rules/Media/Hulu
    interval: 86400
  Japonx:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Media/Japonx.yaml
    path: ./Rules/Media/Japonx
    interval: 86400
  JOOX:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Media/JOOX.yaml
    path: ./Rules/Media/JOOX
    interval: 86400
  KKBOX:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Media/KKBOX.yaml
    path: ./Rules/Media/KKBOX
    interval: 86400
  KKTV:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Media/KKTV.yaml
    path: ./Rules/Media/KKTV
    interval: 86400
  Line TV:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Media/Line%20TV.yaml
    path: ./Rules/Media/Line_TV
    interval: 86400
  myTV SUPER:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Media/myTV%20SUPER.yaml
    path: ./Rules/Media/myTV_SUPER
    interval: 86400
  Pandora:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Media/Pandora.yaml
    path: ./Rules/Media/Pandora
    interval: 86400
  PBS:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Media/PBS.yaml
    path: ./Rules/Media/PBS
    interval: 86400
  Pornhub:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Media/Pornhub.yaml
    path: ./Rules/Media/Pornhub
    interval: 86400
  Soundcloud:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Media/Soundcloud.yaml
    path: ./Rules/Media/Soundcloud
    interval: 86400
  ViuTV:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Media/ViuTV.yaml
    path: ./Rules/Media/ViuTV
    interval: 86400
  Telegram:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Telegram.yaml
    path: ./Rules/Telegram
    interval: 86400
  Crypto:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Crypto.yaml
    path: ./Rules/Crypto
    interval: 86400
  Douyin:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Douyin.yaml
    path: ./Rules/Douyin
    interval: 86400
  Steam:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Steam.yaml
    path: ./Rules/Steam
    interval: 86400
  Speedtest:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Speedtest.yaml
    path: ./Rules/Speedtest
    interval: 86400
  PayPal:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/PayPal.yaml
    path: ./Rules/PayPal
    interval: 86400
  Microsoft:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Microsoft.yaml
    path: ./Rules/Microsoft
    interval: 86400
  PROXY:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Proxy.yaml
    path: ./Rules/Proxy
    interval: 86400
  Domestic:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Domestic.yaml
    path: ./Rules/Domestic
    interval: 86400
  Apple:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Apple.yaml
    path: ./Rules/Apple
    interval: 86400
  Google FCM:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Google%20FCM.yaml
    path: ./Rules/Google FCM
    interval: 86400
  Scholar:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/Scholar.yaml
    path: ./Rules/Scholar
    interval: 86400
  Domestic IPs:
    type: http
    behavior: ipcidr
    url: https://dler.cloud/Rules/Clash/Provider/Domestic%20IPs.yaml
    path: ./Rules/Domestic_IPs
    interval: 86400
  LAN:
    type: http
    behavior: classical
    url: https://dler.cloud/Rules/Clash/Provider/LAN.yaml
    path: ./Rules/LAN
    interval: 86400
...
